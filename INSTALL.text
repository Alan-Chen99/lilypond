


INSTALL(1)            LilyPond documentation           INSTALL(1)


NNNNAAAAMMMMEEEE
       INSTALL - installing GNU LilyPond

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
       This page documents installation and compilation of GNU
       LilyPond

AAAABBBBSSSSTTTTRRRRAAAACCCCTTTT
       You do something which looks remotely like

               configure
               make
               make install
               tar -C /usr/lib/texmf/fonts/source/ -zxf musixtex-T73.tgz 'mf/*'

       The detailed instructions follow here.


PPPPRRRREEEERRRREEEEQQQQUUUUIIIISSSSIIIITTTTEEEESSSS
       For compilation you need.

       +o    A GNU system: GNU LilyPond is known to run on these
            GNU systems: Linux, AIX, Digital Unix and Solaris.

            If you have the Cygnus WINDOWS32 port of the GNU
            utils, it will even work in Windows NT/95, but we
            don't promise to support it.

       +o    GNU C++ v2.7 or better, with libg++ installed.
            Version 2.7.2 or better recommended.

       +o    GNU make.

       +o    Flex (2.5.1 or better).

       +o    Bison. (Version 1.25 or better)

RRRRUUUUNNNNNNNNIIIINNNNGGGG
       GNU LilyPond does use a lot of resources. For operation
       you need the following:

       +o    TeX

       +o    The MusixTeX fonts (I included those found in
            MusixTeX T.73). Beware, the clef symbol seems to have
            changed its position in some versions, (notably
            Egler's, a.k.a. OpusTeX). The MusixTeX fonts are
            included in MusixTeX (T73 or better), which can be
            had from any CTAN site, e.g. at

       ftp://ftp.shsu.edu/tex-archive/macros/musixtex/taupin

       ftp://ftp.tex.ac.uk/tex-archive/macros/musixtex/taupin




2/Dec/97                 LilyPond 0.1.35                        1





INSTALL(1)            LilyPond documentation           INSTALL(1)


       ftp://ftp.dante.de/tex-archive/macros/musixtex/taupin

                You only need the contents of the _m_f_/
                subdirectory of the package. The primary site of
                the Taupin version is ftp://hprib.lps.u-
                psud.fr/pub/music_zips/musixtex.zip

                Andreas Egler's version of MusixTeX, now called
                OpusTeX, will also work. Andreas moved some
                characters around in the fonts, so you have to
                edit the definitions in tex/eglerdefs.tex (patch
                appreciated)

RRRREEEECCCCOOOOMMMMMMMMEEEENNNNDDDDEEEEDDDD
       Although not strictly necessary, these are recommended to
       have.

       +o         Perl-5.  Most documentation was created with the
                 perl's Plain Old Documentation. (I use 5.003)

       +o         Python.  Although perl is nice, python is
                 better.  We will shift towards python for build
                 scripts

       +o         GNU find

       +o         A fast computer (a full page of music typically
                 takes 1 minute on my 486/133, using the
                 --------eeeennnnaaaabbbblllleeee----cccchhhheeeecccckkkkiiiinnnngggg compile. It's lot slower than
                 most MusiXTeX preprocessors)

CCCCOOOONNNNFFFFIIIIGGGGUUUURRRRIIIINNNNGGGG aaaannnndddd CCCCOOOOMMMMPPPPIIIILLLLIIIINNNNGGGG
       to install GNU LilyPond, simply type:

               configure
               make install

       This will install the following files:

               /usr/local/man/man1/mi2mu.1
               /usr/local/man/man1/convert-mudela.1
               /usr/local/man/man1/mudela-book.1
               /usr/local/man/man1/lilypond.1
               /usr/local/lib/libflower.{so,a}
               /usr/local/bin/lilypond
               /usr/local/bin/mi2mu
               /usr/local/share/lilypond/*
               /usr/lib/texmf/texmf/tex/lilypond/*

       The TeX include directory is detected dynamically, but it
       can be adjusted with --------eeeennnnaaaabbbblllleeee----tttteeeexxxx----pppprrrreeeeffffiiiixxxx and --------eeeennnnaaaabbbblllleeee----tttteeeexxxx----
       ddddiiiirrrr. The above assumes that you are root and have the GNU
       development tools, and your make is GNU make.  If this is
       not the case, you can adjust your environment variables to



2/Dec/97                 LilyPond 0.1.35                        2





INSTALL(1)            LilyPond documentation           INSTALL(1)


       your taste:

               export CPPFLAGS="-I /home/me/my_include -DWEIRD_FOOBAR"
               configure

       CPPFLAGS are the preprocessor flags.

       the configure script is Cygnus configure, and it will
       accept --------hhhheeeellllpppp. If you are not root, you will probably have
       to make it with

               configure --prefix=/home/me_myself_and_I/

       In this case, you will have to set MFINPUTS, and TEXINPUTS
       accordingly.

       If you want to install GNU LilyPond in _/_u_s_r_/_l_o_c_a_l, and
       your TeX has no default hooks for local stuff (mine is
       broken too), you can do:

               configure --prefix=/usr/local --enable-tex-prefix=/usr/lib/texmf

       Since GNU LilyPond currently is beta, you are advised to
       also use

               --enable-debugging
               --enable-checking

       other options include:

       --enable-shared
                Make a shared library (gnu/linux, solaris (?)
                only )

       --enable-printing
                Enable debugging print routines (lilypond ----dddd
                option)

       --enable-optimise
                Set maximum optimisation: compile with ----OOOO2222

       --enable-profiling
                Compile with support for profiling

       --enable-tex-prefix
                Set the directory where TeX and Metafont live

       --enable-tex-dir
                Set then directory TeX input is in (detected as a
                subdir of tex-prefix)

       --enable-mf-dir
                Set the directory mf input is in (idem)




2/Dec/97                 LilyPond 0.1.35                        3





INSTALL(1)            LilyPond documentation           INSTALL(1)


       --enable-out-dir
                Set the directory for machine generated output.

                All options are documented in the _c_o_n_f_i_g_u_r_e help
                The option --------eeeennnnaaaabbbblllleeee----ooooppppttttiiiimmmmiiiisssseeee is recommended for
                Real Life usage.

                If you do

                        make all

                everything will be compiled, but nothing will be
                installed.  The resulting binaries can be found
                in the subdirectories _o_u_t_/ (which contain all
                files generated during compilation).

       BBBBuuuuiiiillllddddiiiinnnngggg ffffoooorrrr mmmmuuuullllttttiiiipppplllleeee hhhhoooossssttttssss

       LilyPond does not follow the GNU standards when it comes
       to configuring and making Makefiles. In LilyPond, _m_a_k_e
       generates _a_l_l output in output directories (called _o_u_t_/,
       by default).  You can have multiple compiles from the same
       source-tree, by overriding the setting for the output
       directory.

       Example: on my system, I do debugging and lots compiling.
       For this I use the configuration as follows:

               configure --prefix=~ --enable-debugging --enable-printing --enable-checking
               make all

       and I want to do profiling. For that I use

               configure --prefix=~ --enable-debugging --disable-printing\
                       --disable-checking --enable-profiling --enable-optimise\
                       --enable-out-dir=out-profile

               make OUTDIR_NAME=out-profile all

       These two commands build two entirely separate versions of
       LilyPond. In Real Life, you would probably also want to
       have two different prefixes. On my machine this is no
       problem; I never do make install. My prefix dirs are
       linked back to my source directory.

IIIINNNNSSSSTTTTAAAALLLLLLLLIIIINNNNGGGG
       If you have done a successful make, then a simple

               make install

       should do the trick.

       Install the musixtex fonts in a directory which TeX and MF
       knows (if you are root, look for a directory which



2/Dec/97                 LilyPond 0.1.35                        4





INSTALL(1)            LilyPond documentation           INSTALL(1)


       contains the directories with AMS and CM source (*.mf)
       files. Create a subdir lilypond or musixtex and copy the
       fonts into that). Do not forget to rehash TeX (if
       applicable)

       Example: my fonts are in
       _/_u_s_r_/_l_o_c_a_l_/_l_i_b_/_t_e_x_f_o_n_t_s_/_m_u_s_i_x_t_e_x_/, and I have a symlink
       pointing to that in
       _/_u_s_r_/_l_i_b_/_t_e_x_m_f_/_t_e_x_m_f_/_f_o_n_t_s_/_s_o_u_r_c_e_/_p_u_b_l_i_c_/. After I copied
       the files, I ran "texhash"

CCCCAAAAVVVVEEEEAAAATTTTSSSS
       +o         The -O2 option to gcc triggers a gcc bug on DEC
                 Alpha in dstream.cc. You should turn off this
                 flag for this file.

       +o         Perl5.003 and Perl5.004 use different syntax for
                 pod2html:

EEEEXXXXAAAAMMMMPPPPLLLLEEEE
       This is what I type in my xterm:

               lilypond someinput.ly
               tex lelie.tex
               xdvi test&

       This is what the output looks like over here:

               GNU LilyPond 0.0.78 #4/FlowerLib 1.1.24 #0
               Parsing ... [/home/hw/share/lilypond/init//
                       <..etc..>
                       init//performer.ly]]][input/kortjakje.ly]
               Creating elements ...[8][16][24][25]
               Preprocessing elements...
               Calculating column positions ... [14][25]
               Postprocessing elements...
               TeX output to lelie.tex ...
               Creating MIDI elements ...MIDI output to lelie.midi ...

               hw:~/musix/spacer$ xdvi lelie&
               [1] 855

       Check out the input files, some of them have comments
       Please refer to the man page for more information.

RRRREEEEDDDDHHHHAAAATTTT LLLLIIIINNNNUUUUXXXX
       RedHat Linux users should be able to get a RPM. A spec
       file is in _m_a_k_e_/_o_u_t_/_l_i_l_y_p_o_n_d_._s_p_e_c. You should be able to
       create an rpm as a normal user. Be sure you have a
       ~/.rpmrc, and edit the RPM-dir in _V_a_r_i_a_b_l_e_s_._m_a_k_e. (If you
       create the RPM as a normal user the permissions will not
       be set correctly, unfortunately)





2/Dec/97                 LilyPond 0.1.35                        5





INSTALL(1)            LilyPond documentation           INSTALL(1)


DDDDEEEEBBBBIIIIAAAANNNN GGGGNNNNUUUU////LLLLIIIINNNNUUUUXXXX
       A Debian package is in the works

WWWWIIIINNNNDDDDOOOOWWWWSSSS NNNNTTTT////99995555
       So, you're stuck with Windows, eh?  Well, don't worry, you
       just need (to get) Cygnus' windows32 port of gnu
       development stuff; have a look at
       http://www.cygnus.com/gnu-win32.

       To make GNU LilyPond under, brr, aargh, shudder...
       windows32, well, simply type:

               bash configure
               make

       Note: If you rely on broken DOS/Windows tools such as
       pkzip/WinZIP
             to unpack the distribution, make sure the eeeennnnttttiiiirrrreeee
       source tree
             is unpacked correctly, in particular the empty out
       directories
             (_f_l_o_w_e_r_/_o_u_t, _l_i_b_/_o_u_t et. al.)

AAAAUUUUTTTTHHHHOOOORRRRSSSS
       Han-Wen Nienhuys <hanwen@stack.nl>

       Jan Nieuwenhuizen <jan@digicash.com>

       Have fun!




























2/Dec/97                 LilyPond 0.1.35                        6


