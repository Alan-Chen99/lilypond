

INSTALL - compiling and installing GNU LilyPond
***********************************************

Obtaining
=========

   You can get the latest version of LilyPond at
ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/
(ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/).

   _If you upgrade by patching do remember to rerun autoconf after
applying the patch_.

   If you do not want to download the entire archive for each version,
the safest method for upgrading is to use `xdelta', see
`ftp://ftp.xcf.berkeley.edu/pub/xdelta/'.

   The following command produces `lilypond-1.3.122.tar.gz' from
`lilypond-1.3.121' identical (up to compression dates) to the .122 on
the FTP site.
       xdelta patch lilypond-1.3.121-1.3.122.xd lilypond-1.3.121.tar.gz

Prerequisites
=============

   For compilation you need:

   * A GNU system: GNU LilyPond is known to run on these GNU systems:
     Linux     (PPC, intel), FreeBSD, AIX, NeXTStep, IRIX, Digital Unix
     and     Solaris.

   * Lots of disk space: LilyPond takes between 30 and 100 mb to
     compile if you use debugging information.  If you are short on
     disk-space run configure with `--disable-debugging'.

   * Although we recommend to use Unix, LilyPond is known to run on
     Windows NT/95/98 as well.  See Section Windows NT/95,es.

   * A reasonable C++ compiler:  EGCS 1.1, GCC 2.95.2 or newer. Check
     out `ftp://ftp.gnu.org/gnu/gcc/'.

   * Python 1.5, Check out `ftp://ftp.python.org' or
     `ftp://ftp.cwi.nl/pub/python'.

   * GUILE 1.3.4 or newer,  check out
     http://www.gnu.org/software/guile/guile.html
     (http://www.gnu.org/software/guile/guile.html).  Version 1.4 is
     recommended for better performance.

   * GNU Make.  Check out ftp://ftp.gnu.org/gnu/make/
     (ftp://ftp.gnu.org/gnu/make/).

   * Flex (version 2.5.4a or newer).  Check out
     ftp://ftp.gnu.org/pub/gnu/non-gnu/flex/
     (ftp://ftp.gnu.org/pub/gnu/non-gnu/flex/).

   * Bison (version 1.25 or newer).  Check out
     ftp://ftp.gnu.org/gnu/bison/ (ftp://ftp.gnu.org/gnu/bison/).

   * TeX.  If you want LilyPond to use kpathsea support (recommended),
     make sure you have tetex 1.0 or newer (1.0.6 is known to work).
     You may need to install a tetex-devel or tetex-dev package too.

   * Texinfo (version 4.0 or newer).  Check out
     ftp://ftp.gnu.org/gnu/texinfo/ (ftp://ftp.gnu.org/gnu/texinfo/).
     Most documentation is in texinfo.

   * The geometry package for LaTeX is needed to use ly2dvi.  Available
     at
     ftp://ftp.ctan.org/tex-archive/macros/latex/contrib/supported/geometry
     (ftp://ftp.ctan.org/tex-archive/macros/latex/contrib/supported/geometry)
     or at mirror site ftp://ftp.dante.de (ftp://ftp.dante.de)

   * MetaPost, needed for generating PostScript fonts. Please note that
     tetex-0.4pl8 (included with Red Hat 5.x) does not include
     `mfplain.mp', which is needed for producing the scalable font
     files.

     If you do not want to use PostScript output, edit `mf/GNUmakefile',
     removing the line saying `PFA_FILES='

   * kpathsea, a library for searching (TeX) files.  `kpathsea' is
     usually included with your installation of TeX.


Running
=======

   GNU LilyPond does use a lot of resources. For operation you need the
following software

   * TeX.

   * A PostScript printer and/or viewer (such as Ghostscript) is
     strongly     recommended.  Xdvi will show all embedded PostScript
     too if you have     Ghostscript installed.

   * GUILE 1.3.4, or newer.  Check out
     http://www.gnu.org/software/guile/
     (http://www.gnu.org/programs/guile.html)

   For running LilyPond successfully you have to help TeX and MetaFont
find various files.  The recommended way of doing so is adjusting the
environment variables in the start-up scripts of your shell. Appropriate
Csh and sh scripts are left in `buildscripts/out/lilypond-profile' and
`buildscripts/out/lilypond-login' after compilation.

   The empty path component represents TeX and MetaFont's default search
paths.  Scripts with the proper paths for the bourne and C-shell
respectively are generated in `buildscripts/out/lilypond-profile' and
`buildscripts/out/lilypond-login' during compilation.

   LilyPond is a big and slow program.  A fast CPU and plenty of RAM is
recommended for comfortable use.

Website
=======

   The website is the most convenient form to use for reading the
documentation on-line documentation. It is made by entering

       make htmldoc
   This does require a functioning LilyPond.  The binary doesn't have to
be installed.

   If you want to auto-generate Lily's website, you'll need some
additional conversion tools.

   * xpmtoppm (from the netpbm package: the Portable Bitmap Utilities)
     (For Red Hat Linux 	     users: it is included within the
     package libgr-progs).  	The original is at
     ftp://ftp.x.org/contrib/utilities/netpbm-1mar1994.p1.tar.gz
     (ftp://ftp.x.org/contrib/utilities/netpbm-1mar1994.p1.tar.gz)

   * pnmtopng (also in libgr-progs for Red Hat). The original is at
     ftp://swrinde.nde.swri.edu/pub/png/applications/pnmtopng-2.37.2.tar.gz
     (ftp://swrinde.nde.swri.edu/pub/png/applications/pnmtopng-2.37.2.tar.gz).i

     The version of `pnmtopng' that is distributed with Red Hat 5.1 and
     5.2 contains a bug: pnmtopng is dynamically linked to the wrong
     version of libpng.

   * Bibtex2html (http://www.lri.fr/~filliatr/ftp/bibtex2html/), or
     Bib2html (http://www.uni-koblenz.de/ag-ki/ftp/bib2html/).
     Bibtex2html is available in debian, while bib2html is in some rpm
     based distributions.  Bib2html, in turn depends on man2html for
     proper installation.  man2html can be had from
     http://askdonald.ask.uni-karlsruhe.de/hppd/hpux/Networking/WWW/Man2html-1.05
     (http://askdonald.ask.uni-karlsruhe.de/hppd/hpux/Networking/WWW/Man2html-1.05).

     The website will build without bib converter utility, but you will
     not see our hypertextified bibliography.


Configuring and compiling
=========================

   to install GNU LilyPond, simply type:
     	gunzip -c lilypond-x.y.z | tar xf -
     	cd lilypond-x.y.z
     	./configure		# fill in your standard prefix with --prefix
     	make
     	make install

   This will install a number of files, something close to:

     	/usr/local/man/man1/midi2ly.1
     	/usr/local/man/man1/abc2ly.1
     	/usr/local/man/man1/etf2ly.1
     	/usr/local/man/man1/convert-ly.1
     	/usr/local/man/man1/lilypond-book.1
     	/usr/local/man/man1/lilypond.1
     	/usr/local/bin/lilypond
     	/usr/local/bin/midi2ly
     	/usr/local/bin/convert-ly
     	/usr/local/bin/lilypond-book
     	/usr/local/bin/abc2ly
     	/usr/local/bin/pmx2ly
     	/usr/local/bin/musedata2ly
     	/usr/local/bin/etf2ly
     	/usr/local/share/lilypond/*
     	/usr/local/share/locale/{....}/LC_MESSAGES/lilypond.mo

   The above assumes that you are root and have the GNU development
tools, and your make is GNU make.  If this is not the case, you can
adjust your environment variables to your taste:


     	export CPPFLAGS="-I /home/me/my_include -DWEIRD_FOOBAR"
     	./configure

   `CPPFLAGS' are the preprocessor flags.

   The configure script is Cygnus configure, and it will accept
`--help'. If you are not root, you will probably have to make it with a
different `--prefix' option.  Our favourite location is


     	./configure --prefix=$HOME/usr

   In this case, you will have to set up MFINPUTS, and TEXINPUTS
accordingly.

   Since GNU LilyPond currently is beta, you are advised to also use


     	--enable-debugging
     	--enable-checking

   Options to configure include:

``--enable-printing''
     Enable debugging print routines (lilypond `-D' option)

``--enable-optimise''
     Set maximum optimisation: compile with `-O2'.  This can be
     unreliable on some compiler/platform combinations (eg, DEC Alpha
     and PPC)

``--enable-profiling''
     Compile with support for profiling.

``--enable-config=CONF''
     Output to different configuration files.  Enables different binary
        builds alongside eachother, eg, multi-configuration (debugging,
        profiling), or multi-platform builds.  Use `make conf=CONF' to
        build for a specific configuration.

   All options are documented in the `configure' help The option
`--enable-optimise' is recommended for Real Life usage.

   If you do


     	make all

   everything will be compiled, but nothing will be installed.  The
resulting binaries can be found in the subdirectories `out/' (which
contain all files generated during compilation).

Configuring for multiple platforms
==================================

   If you want to build multiple versions of LilyPond with different
configuration settings, you can use the `--enable-config=CONF' option.
You should use `make conf=CONF' to generate the output in `out-CONF'.
Example: suppose I want to build with and without profiling.  Then I'd
use the following for the normal build,


           ./configure --prefix=~ --disable-optimise --enable-checking
           make
           make install

   and for the profiling version, I specify a different configuration.


           ./configure --prefix=~ --enable-profiling --enable-config=prof --enable-optimise --disable-checking
           make conf=prof
           make conf=prof install

Installing
==========

   if you have done a successful `make', then a simple


     	make install

   should do the trick.

   If you are doing an upgrade, please remember to remove obsolete
`.pk' and `.tfm' files of the fonts.  A script has been provided to do
the work for you, see `bin/clean-fonts.sh'.

Red Hat Linux
=============

   Red Hat Linux users can compile an RPM.  A spec file is in
`make/out/lilypond.spec'; it is distributed along with the sources.

   You can make the rpm by issuing

     	rpm -tb lilypond-x.y.z.tar.gz
     	rpm -i /usr/src/redhat/RPMS/i386/lilypond-x.y.z

   Precompiled Red Hat 7.0 i386 RPMS are available from
`ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/RedHat/'.

   For compilation on a Red Hat system you need these packages, in
addition to the those needed for running:
   * glibc-devel

   * libstdc++-devel

   * guile-devel

   * flex

   * bison

   * texinfo

   * tetex-devel

Debian GNU/Linux
================

   A Debian package is also available.  You may install it easily by
using apt-get as root:

     	apt-get install lilypond1.3

   Alternatively, visit

   * http://packages.debian.org/lilypond
     (http://packages.debian.org/lilypond)

   * http://ftp.debian.org/debian/pool/main/l/lilypond1.3/
     (http://ftp.debian.org/debian/pool/main/l/lilypond1.3/) for latest
     package uploaded to Debian unstable;

   * http://people.debian.org/~foka/lilypond/
     (http://people.debian.org/~foka/lilypond/) for latest
     semi-unofficial build of LilyPond 1.3.121 for Debian 2.2r2
     (potato) users.  The official stable Debian 2.2r2 is stuck with
     the old LilyPond-1.3.24.

   You may contact Anthony Fok <foka@debian.org> for more information.

   The build scripts are in the subdirectory `debian/'; you can make
the .deb by doing, for example:

     	$ su - root
     	# dpkg --purge lilypond lilypond1.3
     	# exit
     	$ tar xzf lilypond-1.3.122.tar.gz
     	$ cd lilypond-1.3.122
     	$ dch -p -v 1.3.122-0.local.1 "Local build."
     	$ debuild
     	$ su - root
     	# dpkg -i ../lilypond1.3_1.3.122*.deb
     	# exit
     	$

   For compilation on a Debian GNU/Linux system you need these packages,
in addition to the those needed for running:

   * g++, cpp, libc6-dev, libstdc++<your-libstdc++-version-here>-dev

   * libguile<your-libguile-version-here>-dev

   * make, m4, flex, bison

   * gettext

   * groff, texinfo, bibtex2html (not in 2.2r2)

   * tetex-base, tetex-bin, tetex-extra, libkpathsea-dev or tetex-dev

   * dpkg-dev, debhelper, fakeroot

   * gs, netpbm, pnmtopng

   Most of these are listed on the Build-Depends line in the
debian/control file.  To ensure the creation of the lilypond deb is
trouble-free, we recommend that you first install the following packages
before starting dpkg-buildpackage by running apt-get as root.

   For Debian 2.2 (or 2.2r2, 2.2r3):

     	apt-get install task-debian-devel task-c++-dev \
     		python-base libguile6-dev tetex-bin tetex-dev \
     		tetex-extra flex bison texinfo groff gs \
     		netpbm pnmtopng m4 gettext

   For Debian in development ("unstable", the future 2.3 or 3.0):

     	apt-get install task-debian-devel task-c++-dev \
     		python-base libguile9-dev tetex-bin libkpathsea-dev \
     		tetex-extra flex bison texinfo bibtex2html groff gs \
     		netpbm pnmtopng m4 gettext

   And, just so that old fonts from previous versions of LilyPond won't
interfere with your build, you may want to do this before the build too:

     	dpkg --purge lilypond lilypond1.3

Windows NT/95
=============

   Separate instructions on building for W32 are available; See the
files in `Documentation/ntweb/', included with the sources.

Problems
========

   For help and questions use <help-gnu-music@gnu.org> and
<gnu-music-discuss@gnu.org>.  Please consult the faq before mailing
your problems.

   If you find bugs, please send bug reports to <bug-gnu-music@gnu.org>.

   Bugs that are LilyPond's fault are listed in our TODO list on the
web, or demonstrated in `input/bugs/'.

   Bugs that are not LilyPond's fault are documented here.

LinuxPPC Bugs:
**************

   * egcs-1.1.2-12c (stock LinuxPPC R5) has a serious bug, upgrade to
     fixed in egcs-1.1.2-12f or gcc-2.95-0a,
     `ftp://dev.linuxppc.org/users/fsirl/R5/RPMS/ppc/'

   * egcs-1.0.2 (LinuxPPC R4): all compiling with `-O2' is suspect, in
     particular guile-1.3, and Lily herself will break.

Linux-i386
**********

   * SuSE6.2 and similar platforms (glibc 2.1, libstdc++ 2.9.0)

     Lily will crash during parsing (which suggests a C++ library
     incompatibility).  Precise cause, precise platform description or
     solution are not known.

     Note that this only happens on some computers with the said
     platform.

   * libg++ 2.7

     LilyPond occasionally crashes while parsing the initialisation
     files.  This is a very obscure bug, and usually entering the
     commandline differently "fixes" it.

          	lilypond input.ly

     and
          	lilypond -I. ./input.ly
     makes a difference

     Typical stacktrace:
          	SIGSEGV
          	__libc_malloc (bytes=16384)
          	?? ()
          	yyFlexLexer::yy_create_buffer ()
          	Includable_lexer::new_input (this=0x8209a00, s={strh_ = {

     This behaviour has been observed with machines that have old libg++
     versions (LinuxPPC feb '98, Red Hat 4.x).

Solaris:
********

   * Sparc64/Solaris 2.6, GNU make-3.77

     GNU make-3.77 is buggy on this platform, upgrade to 3.78.1 or
     newer.

   * Sparc64/Solaris 2.6, ld

     Not yet resolved.

AIX
***

   * AIX 4.3 ld

     The following is from the gcc install/SPECIFIC file.
             Some versions of the AIX binder (linker) can fail with a
          relocation    overflow severe error when the -bbigtoc option
          is used to link    GCC-produced object files into an
          executable that overflows the TOC.     A fix for APAR IX75823
          (OVERFLOW DURING LINK WHEN USING GCC AND    -BBIGTOC) is
          available from IBM Customer Support and from its
          27service.boulder.ibm.com website as PTF U455193.

          Binutils does not support AIX 4.3 (at least through release
          2.9). GNU    as and GNU ld will not work properly and one
          should not configure GCC    to use those GNU utilities. Use
          the native AIX tools which do    interoperate with GCC.

     add -Wl,-bbigtoc to USER_LDFLAGS, ie:
              LDFLAGS='-Wl,-bbigtoc' ./configure


