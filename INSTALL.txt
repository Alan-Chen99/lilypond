

INSTALL - compiling and installing GNU LilyPond
***********************************************

Obtaining
=========

   You can get the latest version of LilyPond at
ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/
(ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/).

   There are three options for downloading sources.

   * if you don't have any version, then you can  download  the entire
     `.tar.gz' file.

   * if you have an unpacked source   tree of a previous version, you
     may use the diffs .

     _If you upgrade by patching do remember to rerun autoconf after
     applying the patch_.

   * if you have the `.tar.gz' file of a previous release, you can use
     xdelta (ftp://ftp.xcf.berkeley.edu/pub/xdelta/).   This is much
     safer than using normal diffs, and is the recommended way.

     The following command produces `lilypond-1.3.122.tar.gz' from
     `lilypond-1.3.121' identical (up to compression dates) to the .122
     on the FTP site.
            xdelta patch lilypond-1.3.121-1.3.122.xd lilypond-1.3.121.tar.gz

Build requirements
==================

   This document describes how to build LilyPond on Unix platforms.  It
is also known to run and compile on Windows NT/95/98 as well.  More
information on this topic can be found at Jan's windows page
(http://appel.lilypond.org/lilypond/gnu-windows/).

   You need the following packages to compile Lilypond.

   * A reasonably new C++ compiler:  EGCS 1.1, GCC 2.95.2 or newer.
     Check out the gcc site (ftp://ftp.gnu.org/gnu/gcc/).

   * Python 1.5, Check out the python website (http://www.python.org).

   * GUILE 1.3.4 or newer,  check out the GUILE webpage
     (http://www.gnu.org/software/guile/guile.html).  Version 1.4 is
     recommended for better performance.

   * GNU Make.  Check out the GNU make FTP directory
     (ftp://ftp.gnu.org/gnu/make/).

   * Flex (version 2.5.4a or newer).  Check out the Flex webpage
     (http://www.gnu.org/software/flex/).

   * Bison (version 1.25 or newer).  Check out the bison webpage
     (http://www.gnu.org/software/bison/)

   * TeX.

     If you want LilyPond to use kpathsea support (recommended), make
     sure you have tetex 1.0 or newer (1.0.6 is known to work).  You
     may need to install a tetex-devel or tetex-dev package too.

   * Texinfo (version 4.0 or newer).  The documentation of lily is
     written in texinfo.  Check out the texinfo FTP directory
     (ftp://ftp.gnu.org/gnu/texinfo/).

   * The geometry package for LaTeX is needed to use ly2dvi.  It is
     available at the FTP directory for `geometry'
     (ftp://ftp.ctan.org/tex-archive/macros/latex/contrib/supported/geometry).
     This package is normally included with the TeX distribution.

   * MetaPost, needed for generating PostScript fonts. Please note that
     tetex-0.4pl8 (included with Red Hat 5.x) does not include
     `mfplain.mp', which is needed for producing the scalable font
     files.

     If you don't have MetaPost and don't want to use PostScript
     output, then edit `mf/GNUmakefile', removing the line saying
     `PFA_FILES='.

   * kpathsea, a library for searching (TeX) files.  `kpathsea' is
     usually included with your installation of TeX.


Running requirements
====================

   GNU LilyPond does use a lot of resources. For operation you need the
following software

   * TeX.

   * Xdvi and ghostscript

   * GUILE 1.3.4, or newer.  Check out the GUILE webpage
     (http://www.gnu.org/software/guile.html)

   For running LilyPond successfully you have to help TeX and MetaFont
find various files.  The recommended way of doing so is adjusting the
environment variables in the start-up scripts of your shell. Appropriate
Csh and bourne sh scripts are left in
`buildscripts/out/lilypond-profile' and
`buildscripts/out/lilypond-login' after compilation.

   LilyPond is a big and slow program.  A fast CPU and plenty of RAM is
recommended for comfortable use.

Website requirements
====================

   The documentation comes in the form of a website. You can view this
website on the internet, but you can also build it locally. This process
requires a successful compile of lilypond. The website is built by
issuing

       make web-doc

   Building the website requires  some additional tools:

   * xpmtoppm (from the netpbm package: the Portable Bitmap Utilities).
     The original is at the netpbm FTP site
     (ftp://ftp.x.org/contrib/utilities/netpbm-1mar1994.p1.tar.gz)

   * pnmtopng. The original is at in the pnmtopng FTP site
     (ftp://swrinde.nde.swri.edu/pub/png/applications/pnmtopng-2.37.2.tar.gz).

   * Bibtex2html (http://www.lri.fr/~filliatr/ftp/bibtex2html/), or
     Bib2html (http://www.uni-koblenz.de/ag-ki/ftp/bib2html/).
     Bibtex2html is available in debian, while bib2html is in some rpm
     based distributions.  Bib2html, in turn depends on man2html for
     proper installation.  man2html can be had from
     http://askdonald.ask.uni-karlsruhe.de/hppd/hpux/Networking/WWW/Man2html-1.05
     (http://askdonald.ask.uni-karlsruhe.de/hppd/hpux/Networking/WWW/Man2html-1.05).

     The website will build without bib converter utility, but you will
     not see our hypertextified bibliography.


Configuring and compiling
=========================

   to install GNU LilyPond, type:
     	gunzip -c lilypond-x.y.z | tar xf -
     	cd lilypond-x.y.z
     	./configure		# run with --help to see appropriate options
     	make
     	make install
             sh buildscripts/clean-fonts.sh

   If you are doing an upgrade, you should remove all `feta' `.pk' and
`.tfm' files.  A script has been provided to do the work for you, see
`buildscripts/clean-fonts.sh'.

   If you are not root, you should choose a `--prefix' argument that
points into your home directory, eg.

     	./configure --prefix=$HOME/usr

   In this case, you have to insert the contents of
`buildscripts/out/lilypond-login' or
`buildscripts/out/lilypond-profile' into your start up scripts by hand.

Configuring for multiple platforms
==================================

   If you want to build multiple versions of LilyPond with different
configuration settings, you can use the `--enable-config=CONF' option
of configure.  You should use `make conf=CONF' to generate the output
in `out-CONF'.  Example: suppose I want to build with and without
profiling.  Then I'd use the following for the normal build,

           ./configure --prefix=~ --enable-checking
           make
           make install

   and for the profiling version, I specify a different configuration.


           ./configure --prefix=~ --enable-profiling --enable-config=prof --disable-checking
           make conf=prof
           make conf=prof install

Emacs mode
==========

   An emacs mode for LilyPond is included with the source archive as
`lilypond-mode.el' and `lilypond-font-lock.el'.  If you have an RPM, it
is in `/usr/share/doc/lilypond-X/'.  You have to install it yourself.

   Add this to your ~/.emacs or ~/.emacs.el:
         (load-library "lilypond-mode.el")
         (setq auto-mode-alist
           (cons '("\\.ly$" . LilyPond-mode) auto-mode-alist))
         (add-hook 'LilyPond-mode-hook (lambda () (turn-on-font-lock)))

   If you have the latest LilyPond-1.3.x Debian package, LilyPond-mode
is automatically loaded, so you need not modify your `~/.emacs' file.

Red Hat Linux
=============

   Red Hat 7.0 i386 RPMS are available from
`ftp://ftp.cs.uu.nl/pub/GNU/LilyPond/RedHat/'.

   You can also compile them yourself.  A spec file is in
`make/out/lilypond.spec'. This file is distributed along with the
sources.  You can make the rpm by issuing

     	rpm -tb lilypond-x.y.z.tar.gz
     	rpm -i /usr/src/redhat/RPMS/i386/lilypond-x.y.z

   For running on a Red Hat system you need these packages: guile,
tetex, tetex-dvips, libstdc++, python, ghostscript.

   For compilation on a Red Hat system you need these packages, in
addition to the those needed for running: glibc-devel, gcc-c++,
libstdc++-devel, guile-devel, flex, bison, texinfo, tetex-devel, groff,
libgr-progs.

SuSE
====

   [TODO: document this]

   Install `tetex', `te_mpost', `te_kpath'.

Mandrake
========

   [TODO]

Debian GNU/Linux
================

   A Debian package is also available.  You may install it easily by
using apt-get as root:

     	apt-get install lilypond1.3

   Alternatively, visit

   * http://packages.debian.org/lilypond
     (http://packages.debian.org/lilypond)

   * http://ftp.debian.org/debian/pool/main/l/lilypond1.3/
     (http://ftp.debian.org/debian/pool/main/l/lilypond1.3/) for latest
     package uploaded to Debian unstable;

   * http://people.debian.org/~foka/lilypond/
     (http://people.debian.org/~foka/lilypond/) for latest
     semi-unofficial build of LilyPond 1.3.121 for Debian 2.2r2
     (potato) users.  The official stable Debian 2.2r2 is stuck with
     the old LilyPond-1.3.24.

   You may contact Anthony Fok <foka@debian.org> for more information.

   The build scripts are in the subdirectory `debian/'; you can make
the .deb by doing, for example:

     	$ su - root
     	# dpkg --purge lilypond lilypond1.3
     	# exit
     	$ tar xzf lilypond-1.3.122.tar.gz
     	$ cd lilypond-1.3.122
     	$ dch -p -v 1.3.122-0.local.1 "Local build."
     	$ debuild
     	$ su - root
     	# dpkg -i ../lilypond1.3_1.3.122*.deb
     	# exit
     	$

   For compilation on a Debian GNU/Linux system you need these packages,
in addition to the those needed for running:

   * g++, cpp, libc6-dev, libstdc++<your-libstdc++-version-here>-dev

   * libguile<your-libguile-version-here>-dev

   * make, m4, flex, bison

   * gettext

   * groff, texinfo, bibtex2html (not in 2.2r2)

   * tetex-base, tetex-bin, tetex-extra, libkpathsea-dev or tetex-dev

   * dpkg-dev, debhelper, fakeroot

   * gs, netpbm, pnmtopng

   Most of these are listed on the Build-Depends line in the
debian/control file.  To ensure the creation of the lilypond deb is
trouble-free, we recommend that you first install the following packages
before starting dpkg-buildpackage by running apt-get as root.

   For Debian 2.2 (or 2.2r2, 2.2r3):

     	apt-get install task-debian-devel task-c++-dev \
     		python-base libguile6-dev tetex-bin tetex-dev \
     		tetex-extra flex bison texinfo groff gs \
     		netpbm pnmtopng m4 gettext

   For Debian in development ("unstable", the future 2.3 or 3.0):

     	apt-get install task-debian-devel task-c++-dev \
     		python-base libguile9-dev tetex-bin libkpathsea-dev \
     		tetex-extra flex bison texinfo bibtex2html groff gs \
     		netpbm pnmtopng m4 gettext

   And, just so that old fonts from previous versions of LilyPond won't
interfere with your build, you may want to do this before the build too:

     	dpkg --purge lilypond lilypond1.3

Problems
========

   For help and questions use <help-gnu-music@gnu.org> and
<gnu-music-discuss@gnu.org>.  Please consult the faq before mailing
your problems.  If you find bugs, please send bug reports to
<bug-gnu-music@gnu.org>.

   Bugs that are not fault of LilyPond are documented here.

Solaris:
********

   * Sparc64/Solaris 2.6, GNU make-3.77

     GNU make-3.77 is buggy on this platform, upgrade to 3.78.1 or
     newer.

   * Sparc64/Solaris 2.6, ld

     Not yet resolved.

AIX
***

   * AIX 4.3 ld

     The following is from the gcc install/SPECIFIC file.
             Some versions of the AIX binder (linker) can fail with a
          relocation    overflow severe error when the -bbigtoc option
          is used to link    GCC-produced object files into an
          executable that overflows the TOC.     A fix for APAR IX75823
          (OVERFLOW DURING LINK WHEN USING GCC AND    -BBIGTOC) is
          available from IBM Customer Support and from its
          27service.boulder.ibm.com website as PTF U455193.

          Binutils does not support AIX 4.3 (at least through release
          2.9). GNU    as and GNU ld will not work properly and one
          should not configure GCC    to use those GNU utilities. Use
          the native AIX tools which do    interoperate with GCC.

     add -Wl,-bbigtoc to USER_LDFLAGS, ie:
              LDFLAGS='-Wl,-bbigtoc' ./configure


