\input texinfo @c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-

@ignore
    Translation of GIT committish: 3123dcf12436526a8d8f4498e4f7d3661d156a57

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c Translators: Jean-Charles Malahieude
@c Translation checkers:

@settitle LilyPond Changes

@c no dircategory nor direntry in  French
@c since info is not translated. -JCM
@c deux lignes vides entre les items

@include fr/macros.itexi

@documentencoding UTF-8
@documentlanguage fr
@afourpaper

@macro manualIntro
Ce document recense les modifications et les nouvelles fonctionnalités
de LilyPond pour la version @version{} (depuis la 2.24).
@end macro

@lilyTitlePage{Nouveautés}

@iftex
@allowcodebreaks false
@end iftex

@ignore

HINTS

* only show verbatim input for syntax/input changes

* try to be as brief possible in those cases

* don't try to provide real-world examples, they often get too big,
which scares away people.

* Write complete sentences.

* only show user-visible changes.

@end ignore


@warning{Chaque nouvelle version de LilyPond peut comporter des
changements de syntaxe, ce qui peut exiger de modifier les fichiers que
vous avez écrits avec des vesrions précédentes, de telle sorte qu'ils
restent fonctionnels avec les nouvelles versions. Afin de mettre à jour
vos fichiers, il est @strong{fortement conseillé} d'utiliser
l'utilitaire @command{convert-ly} distribué avec LilyPond et qui est
abordé dans @rprogramnamed{Updating files with convert-ly, Mise à jour avec convert-ly}. @command{convert-ly}
est capable de réaliser la plupart des modifications de syntaxe
automatiquement. Les utilisateurs de Frescobaldi peuvent lancer
@command{convert-ly} directement à partir du menu de Frescobaldi en
faisant « Outils > Mettre à jour avec convert-ly@dots{} ». D'autres
environnements prenant en charge LilyPond sont susceptibles de fournir
un moyen graphique de lancer @command{convert-ly}.}


@menu
* Major changes in LilyPond::
* New for musical notation::
* New for specialist notation::
* Miscellaneous improvements::
@end menu


@node Major changes in LilyPond
@unnumbered Modifications majeures de LilyPond

@itemize

@item
Le marges sont désormais plus larges, suivant ainsi les mises en pages
de nombreux éditeurs, et conformément aux recommandations d'Elaine
Gould.

Pour retrouver les même réglages que précédemment, notamment dans le but
de conserver la mise en page après mise à jour d'une partitiion à la
version @version{}, il suffit d'ajouter le code suivant :

@example
\paper @{
  top-margin = 5\mm
  bottom-margin = 10\mm
  top-system-spacing.basic-distance = 1
  top-markup-spacing.basic-distance = 0
  left-margin = 10\mm
  right-margin = 10\mm
  inner-margin = 10\mm
  outer-margin = 20\mm
  binding-offset = 0\mm
@}
@end example


@item
Au lieu de générer des sorties PostScript ou SVG par lui-même, LilyPond
peut désormais utiliser la bibliothèque Cairo pour produire ses
résultats. Il est ici fait référence au « moteur Cairo » qui peut être
activé par l'option @code{-dbackend-cairo} en ligne de commande. Cette
fonctionnalité est opérationnelle pour tous les formats de sortie (PDF,
SVG, PNG, PostScript) et apporte vitesse et amélioration du rendu SVG en
particulier. Néanmoins, les fonctionnalités des moteurs par défaut ne
sont pas encore toutes implémentées. Sont entre autre absent le plan des
PDF, l'option @code{-dembed-source-code} pour le PDF et la propriété
@code{output-attributes} pour le SVG.

@end itemize


@ignore

@node Notes for source compilation and packagers
@unnumberedsec Notes à propos de la compilation des sources et à l'attention des empaqueteurs

@end ignore


@node New for musical notation
@unnumbered Nouveautés en matière de notation musicale

@menu
* Pitches improvements::
* Rhythm improvements::
* Expressive mark improvements::
* Repeat improvements::
* Editorial annotation improvements::
* Text and font improvements::
@end menu


@node Pitches improvements
@unnumberedsec Améliorations de la représentation des hauteurs

Rien pour l'instant.


@node Rhythm improvements
@unnumberedsec Améliorations en matière de rythme

@itemize
@item
La nouvelle option @code{span-all-note-heads} permet aux crochets de
n-olets d'embrasser toutes les têtes de notes (pas seulement les hampes)
comme recomandé par Gould et Ross.

@lilypond[quote]
{
  \time 3/4
  \override TupletBracket.span-all-note-heads = ##t
  \tuplet 3/2
    {
      \tuplet 3/2
        {
          fis'8
          (
          e'8
          d'8
        }
      g'4
      f'4
      )
    }
  \tuplet 3/2
    {
      <c' d'>8
      a'8
      r8
    }
}
@end lilypond


@item
Grâce à la propriété @code{printInitialRepeatBar}, il est désormais
possible d'afficher automatiquement une barre de reprise même
lorsqu'elle intervient en début de pièce.

@lilypond[quote]
\fixed c'' {
  \set Score.printInitialRepeatBar = ##t
  \repeat volta 2 { c2 f }
}
@end lilypond

@end itemize


@node Expressive mark improvements
@unnumberedsec Améliorations en matière d'expressivité

@itemize
@item
Sont désormais disponibles deux variantes du signe de respiration :
@q{laltcomma} et @q{raltcomma}. Ces glyphes représent respectivement les
anciens galbes de « lcomma » et « rcomma » avant leur changement pour un
galbe plus courant.

@lilypond[quote,verbatim]
{
  \override BreathingSign.text =
    \markup { \musicglyph "scripts.raltcomma" }
  f'2 \breathe f' |
}
@end lilypond

@end itemize


@node Repeat improvements
@unnumberedsec Améliorations en matière de reprises

Rien pour l'instant.


@node Editorial annotation improvements
@unnumberedsec Améliorations en matière d'annotations éditoriales

@itemize
@item
Les objets graphiques @code{NoteName} sont désormais centrés
horizontalement par défaut.

@end itemize


@node Text and font improvements
@unnumberedsec Améliorations en matière de fontes et de mise en forme du texte

@itemize
@item
La syntaxe permettant de modifier les fontes musicales et textuelles a
changé. Au lieu de

@quotation
@verbatim
\paper {
  #(define fonts
     (set-global-fonts
       #:music "Nom de la fonte musicale"
       #:brace "Nom de la fonte musicale d'accolades"
       #:roman "Nom de la fonte à empattements"
       #:sans "Nom de la fonte sans empattements"
       #:typewriter "Nom de la fonte monospace"))
}
@end verbatim
@end quotation

@noindent
ou

@quotation
@verbatim
\paper {
  #(define fonts
     (make-pango-font-tree
       "Nom de la fonte à empattements"
       "Nom de la fonte sans empattements"
       "Nom de la fonte monospace"
       factor))
}
@end verbatim
@end quotation

@noindent
la syntaxe consacrée est dorénavant

@quotation
@verbatim
\paper {
  fonts.music = "Nom de la fonte musicale"
  fonts.serif = "Nom de la fonte à empattements"
  fonts.sans = "Nom de la fonte sans empattement"
  fonts.typewriter = "Nom de la fonte monospace"
}
@end verbatim
@end quotation

Contrairement aux anciennes pratiques, la nouvelle syntaxe n'interfère
en rien dans la taille des fontes, qui doit se gérer séparément à l'aide
de @code{set-global-staff-size} ou @code{layout-set-staff-size}.

La liste associative ne comporte pas de clé @code{brace} ; les glyphes
d'accolade sont désormais toujours pris dans la fonte musicale. Il est
néanmoins possible d'y déroger en utilisant une famille de fontes
supplémentaire, comme dans l'exemple suivant (la fonte LilyJAZZ doit
alors être disponible) :

@quotation
@verbatim
\paper {
  fonts.music-alt = "lilyjazz"
}

\layout {
  \context {
    \Score
    \override SystemStartBrace.font-family = #'music-alt
  }
}

\new PianoStaff <<
  \new Staff { c' }
  \new Staff { c' }
>>

\markup \override #'(font-family . music-alt) \left-brace #20
@end verbatim
@end quotation


@item
La commande de @emph{markup} @code{\lookup} n'est désormais disponible
que pour les accolades ; pour les autres glyphes, c'est la commande
@code{\musicglyph} qu'il faut utiliser. Au lieu de @code{\lookup}, il
vaut d'ailleurs mieux lui préférer @code{\left-brace}.


@item
Lorsqu'une fonte musicale est utilisée dans un @emph{markup} --
typiquement pour une indication de nuance -- et qu'un glyphe en était
absent, celui-ci était rendu dans une fonte textuelle normale. Ceci
n'est plus le cas, et un avertissement est alors émis quant au glyphe
manquant. Afin d'utiliser une fonte textuelle, il faut utiliser l'une
des commande de @emph{markup} @code{\serif}, @code{\sans} et
@code{\typewriter}, comme ici par exemple.

@lilypond[verbatim,quote]
dolceP =
#(make-dynamic-script
  #{
    \markup {
      \serif \normal-weight dolce
      p
    }
  #})

{ c'\dolceP }
@end lilypond


@item
Les petites capitales s'obtiennent désormais en réglant
@code{font-variant} sur @code{small-caps}, plutôt qu'en fixant
@code{font-shape} à @code{caps}. Dans la mesure où la raison d'être de
@code{font-shape} est de pouvoir accéder à l'italique, ce changement
rend possible l'utilisation conjointe de petites capitales et de
l'italique.

@lilypond[quote]
\markup \fontCaps \italic "Small caps in italics"
@end lilypond

@end itemize


@node New for specialist notation
@unnumbered Nouveautés en matière de notation spécialisée


@ignore
@node Fretted string instrument improvements
@unnumberedsec Améliorations pour les cordes frettées


@node Percussion improvements
@unnumberedsec Améliorations pour la notation des percussions


@node Wind instrument improvements
@unnumberedsec Améliorations pour la notation des instruments à vent


@node Chord notation improvements
@unnumberedsec Améliorations pour la notation des accords



@node Ancient notation improvements
@unnumberedsec Améliorations pour les notations anciennes



@subsubheading Améliorations pour les musiques du monde

@end ignore

@node Miscellaneous improvements
@unnumbered Autres améliorations diverses

@itemize
@item
L'inclusion d'images PNG est désormais possible à l'aide de la commande
de @emph{markup} @code{\image}. Ceci vient en supplement de la commande
@code{\epsfile} pour les images EPS.

La commande @code{\image} traîte aussi bien les images PNG que EPS, à
ceci près que la commande @code{\image} insère un fond blanc,
contrairement à @code{\epsfile}.

@item
La nouvelle commande de @emph{markup} @code{\qr-code} permet d'insérer
un QR-code de la taille spécifiée pour l'URL correspondante. Ceci peut
servir à fournir un lien vers le site du compositeur ou de l'éditeur, ou
bien vers les sources LilyPond ou des enregistrements, etc.


@end itemize



@ifhtml
Pour des annonces plus anciennes, rendez-vouz aux pages
@uref{https://lilypond.org/doc/v2.22/Documentation/changes/},
ou @uref{../,remontez} à l'index de la documentation.

@end ifhtml

@bye
