\input texinfo @c -*- coding: utf-8; mode: texinfo; -*-
@setfilename lilypond-changes.info
@settitle LilyPond Changes

@dircategory LilyPond -- the music typesetter
@direntry
* Changes: (lilypond-changes).          News since version 2.24.
@end direntry

@include en/macros.itexi

@documentencoding UTF-8
@documentlanguage en
@afourpaper

@macro manualIntro
This document lists changes and new features
in LilyPond version @version{} since 2.24.
@end macro

@lilyTitlePage{Changes}

@ignore

HINTS

* only show verbatim input for syntax/input changes

* try to be as brief possible in those cases

* don't try to provide real-world examples, they often get too big,
which scares away people.

* Write complete sentences.

* only show user-visible changes.

@end ignore

@warning{LilyPond releases can contain syntax changes, which may
require modifications in your existing files written for older
versions so that they work in the new version.  To upgrade files,
it is @strong{strongly recommended} to use the @command{convert-ly}
tool distributed with LilyPond, which is described in
@rprogram{Updating files with convert-ly}.  @command{convert-ly} can
perform almost all syntax updates automatically.  Frescobaldi users can
run @command{convert-ly} directly from Frescobaldi using
@qq{Tools > Update with convert-ly@dots{}}.  Other editing
environments with LilyPond support may provide a way to run
@command{convert-ly} graphically.}


@menu
* Major changes in LilyPond::
* New for musical notation::
* New for specialist notation::
* Miscellaneous improvements::
@end menu


@node Major changes in LilyPond
@unnumbered Major changes in LilyPond

@itemize

@item
Margins are now wider by default following the general layout of
several publishers (and the recommendations of Elaine Gould).

In order to switch back to the previous settings (e.g., to keep
the same layout when upgrading an existing score to version
@version{}), add the following code:

@example
\paper @{
  top-margin = 5\mm
  bottom-margin = 10\mm
  top-system-spacing.basic-distance = 1
  top-markup-spacing.basic-distance = 0
  left-margin = 10\mm
  right-margin = 10\mm
  inner-margin = 10\mm
  outer-margin = 20\mm
  binding-offset = 0\mm
@}
@end example

@item
Instead of generating PostScript or SVG output by itself, LilyPond
can now use the Cairo library to produce its output.  This is
referred to as the @q{Cairo backend}, and can be turned on using
the @code{-dbackend=cairo} command-line option.  This works for
all output formats (PDF, SVG, PNG, PostScript), and brings speed
and rendering fidelity improvements in SVG output in particular.
However, keep in mind that this backend does not yet implement all
features of the default backends.  Among the features not
currently supported are PDF outlines, the
@code{-dembed-source-code} option for PDF, and the
@code{output-attributes} property for SVG.

@end itemize

@ignore

@node Notes for source compilation and packagers
@unnumberedsec Notes for source compilation and packagers

See if we need this again...

@end ignore


@node New for musical notation
@unnumbered New for musical notation

@menu
* Pitches improvements::
* Rhythm improvements::
* Expressive mark improvements::
* Repeat improvements::
* Editorial annotation improvements::
* Text and font improvements::
@end menu

@node Pitches improvements
@unnumberedsec Pitches improvements

None so far.

@node Rhythm improvements
@unnumberedsec Rhythm improvements

@itemize

@item
The new option @code{span-all-note-heads} may be used to make
tuplet brackets span all note heads (not just the stems) as
recommended by Gould and Ross.

@lilypond[quote]
{
  \time 3/4
  \override TupletBracket.span-all-note-heads = ##t
  \tuplet 3/2
    {
      \tuplet 3/2
        {
          fis'8
          (
          e'8
          d'8
        }
      g'4
      f'4
      )
    }
  \tuplet 3/2
    {
      <c' d'>8
      a'8
      r8
    }
}
@end lilypond

@item
Using the new @code{printInitialRepeatBar} property, it is
possible to make a start repeat bar line automatically printed
even at the beginning of the piece.

@lilypond[quote]
\fixed c'' {
  \set Score.printInitialRepeatBar = ##t
  \repeat volta 2 { c2 f }
}
@end lilypond

@end itemize


@node Expressive mark improvements
@unnumberedsec Expressive mark improvements

@itemize

@item
Two new variant glyphs for breathing signs are available:
@q{laltcomma} and @q{raltcomma}.  These glyphs represent the old
shapes of @q{lcomma} and @q{rcomma}, respectively, before changing
them to more common shapes.

@lilypond[quote,verbatim]
{
  \override BreathingSign.text =
    \markup { \musicglyph "scripts.raltcomma" }
  f'2 \breathe f' |
}
@end lilypond

@end itemize


@node Repeat improvements
@unnumberedsec Repeat improvements

None so far.


@node Editorial annotation improvements
@unnumberedsec Editorial annotation improvements

@itemize
@item @code{NoteName} grobs are now horizontally centered by default.

@end itemize


@node Text and font improvements
@unnumberedsec Text and font improvements

@itemize
@item
The syntax for customizing text and music fonts has been changed.
Instead of

@quotation
@verbatim
\paper {
  #(define fonts
     (set-global-fonts
       #:music "Name of music font"
       #:brace "Name of music brace font"
       #:roman "Name of roman font"
       #:sans "Name of sans-serif font"
       #:typewriter "Name of typewriter font"))
}
@end verbatim
@end quotation

or

@quotation
@verbatim
\paper {
  #(define fonts
     (make-pango-font-tree
       "Name of roman font"
       "Name of sans-serif font"
       "Name of typewriter font"
       factor))
}
@end verbatim
@end quotation

@noindent
the new syntax is

@quotation
@verbatim
\paper {
  fonts.music = "Name of music font"
  fonts.roman = "Name of roman font"
  fonts.sans = "Name of sans-serif font"
  fonts.typewriter = "Name of typewriter font"
}
@end verbatim
@end quotation

Unlike the previous syntax, the new syntax does not interfere with
font sizes, which should be set separately using
@code{set-global-staff-size} or @code{layout-set-staff-size}.

There is no @code{brace} key in the fonts alist; braces glyphs now
always default to the music font.  However, it is still possible to
override this by using an extra font family, as shown in this example
(which requires the LilyJAZZ font):

@quotation
@verbatim
\paper {
  fonts.music-alt = "lilyjazz"
}

\layout {
  \context {
    \Score
    \override SystemStartBrace.font-family = #'music-alt
  }
}

\new PianoStaff <<
  \new Staff { c' }
  \new Staff { c' }
>>

\markup \override #'(font-family . music-alt) \left-brace #20
@end verbatim
@end quotation


@end itemize

@node New for specialist notation
@unnumbered New for specialist notation

None so far.


@node Miscellaneous improvements
@unnumbered Miscellaneous improvements

@itemize
@item
Embedding PNG images is now supported using the new @code{\image}
markup command.  This supplements the existing @code{\epsfile}
command for EPS images.

@code{\image} works for both PNG and EPS images.  For EPS images,
the difference between using @code{\image} and @code{\epsfile} is
that @code{\image} adds a white background by default, while
@code{\epsfile} does not.

@item
The new @code{\qr-code} markup command inserts a QR code of the
specified size for the specified URL.  This can be used to link
to, e.g., the website of a composer or publisher, the LilyPond
source files for the score, recordings, etc.

@lilypond[verbatim,quote]
\markup \qr-code #10 "https://lilypond.org"
@end lilypond

@end itemize


@ifhtml
For older news, go to
@uref{https://lilypond.org/doc/v2.22/Documentation/changes/},
or @uref{../,go back} to the Documentation index.

@end ifhtml

@bye
